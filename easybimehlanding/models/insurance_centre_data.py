# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class InsuranceCentreData(object):

    """Implementation of the 'InsuranceCentreData' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        person_id (string): TODO: type description here.
        personality_type (int): TODO: type description here.
        insurance_centre_type (int): TODO: type description here.
        register_status (int): TODO: type description here.
        center_name (string): TODO: type description here.
        center_code (string): TODO: type description here.
        branch_count (string): TODO: type description here.
        registration_number (string): TODO: type description here.
        free_use_golden_pack_expire_date (string): TODO: type description
            here.
        city_id (int): TODO: type description here.
        cash_payment (bool): TODO: type description here.
        show_in_easy_bimeh (bool): TODO: type description here.
        installments_payment (bool): TODO: type description here.
        is_initial_applicant (bool): TODO: type description here.
        branchs_count (int): TODO: type description here.
        employees_count (int): TODO: type description here.
        zone_id (string): TODO: type description here.
        sms_charging_stock (string): TODO: type description here.
        independent_branch (string): TODO: type description here.
        disable_reason (string): TODO: type description here.
        terms_conditions (string): TODO: type description here.
        disable_reason_description (string): TODO: type description here.
        unlimited_account (string): TODO: type description here.
        white_label (bool): TODO: type description here.
        phone (string): TODO: type description here.
        fax (string): TODO: type description here.
        address (string): TODO: type description here.
        zip_code (string): TODO: type description here.
        email (string): TODO: type description here.
        payment_url (string): TODO: type description here.
        callback_url (string): TODO: type description here.
        callback_url_whitelabel (string): TODO: type description here.
        web_site (string): TODO: type description here.
        latitude (float): TODO: type description here.
        longitude (float): TODO: type description here.
        is_active (bool): TODO: type description here.
        insurance_centre_id (string): TODO: type description here.
        city_region_id (string): TODO: type description here.
        province_id (int): TODO: type description here.
        city_name (string): TODO: type description here.
        meta_media_activity_licence_id (int): TODO: type description here.
        meta_media_activity_licence_url (string): TODO: type description
            here.
        create_on_persian_date (string): TODO: type description here.
        insurance_company_id (list of int): TODO: type description here.
        active_package_id (int): TODO: type description here.
        package_activation_last_date (string): TODO: type description here.
        license_api_key (string): TODO: type description here.
        verify_request_url (string): TODO: type description here.
        online_payment (bool): TODO: type description here.
        card_to_card_payment (bool): TODO: type description here.
        bank_transfer_payment (bool): TODO: type description here.
        cash_on_delivery (bool): TODO: type description here.
        bank_transfer_same_online_payment_info (bool): TODO: type description
            here.
        bank_param_id (int): TODO: type description here.
        account_owner (string): TODO: type description here.
        account_number (string): TODO: type description here.
        iban (string): TODO: type description here.
        card_bank_param_id (int): TODO: type description here.
        card_account_owner (string): TODO: type description here.
        card_account_number (string): TODO: type description here.
        bank_transfer_param_id (int): TODO: type description here.
        bank_transfer_account_owner (string): TODO: type description here.
        bank_transfer_account_number (string): TODO: type description here.
        bank_transfer_iban (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "person_id":'personId',
        "personality_type":'personalityType',
        "insurance_centre_type":'insuranceCentreType',
        "register_status":'registerStatus',
        "center_name":'centerName',
        "center_code":'centerCode',
        "registration_number":'registrationNumber',
        "free_use_golden_pack_expire_date":'freeUseGoldenPackExpireDate',
        "city_id":'cityId',
        "cash_payment":'cashPayment',
        "show_in_easy_bimeh":'showInEasyBimeh',
        "installments_payment":'installmentsPayment',
        "is_initial_applicant":'isInitialApplicant',
        "branchs_count":'branchsCount',
        "employees_count":'employeesCount',
        "white_label":'whiteLabel',
        "phone":'phone',
        "fax":'fax',
        "address":'address',
        "zip_code":'zipCode',
        "email":'email',
        "web_site":'webSite',
        "latitude":'latitude',
        "longitude":'longitude',
        "is_active":'isActive',
        "province_id":'provinceId',
        "city_name":'cityName',
        "meta_media_activity_licence_id":'metaMediaActivityLicenceId',
        "create_on_persian_date":'createOnPersianDate',
        "insurance_company_id":'insuranceCompanyId',
        "active_package_id":'activePackageId',
        "package_activation_last_date":'packageActivationLastDate',
        "online_payment":'onlinePayment',
        "card_to_card_payment":'cardToCardPayment',
        "bank_transfer_payment":'bankTransferPayment',
        "cash_on_delivery":'cashOnDelivery',
        "bank_transfer_same_online_payment_info":'bankTransferSameOnlinePaymentInfo',
        "bank_param_id":'bankParamId',
        "account_owner":'accountOwner',
        "account_number":'accountNumber',
        "iban":'iban',
        "card_bank_param_id":'cardBankParamId',
        "card_account_owner":'cardAccountOwner',
        "card_account_number":'cardAccountNumber',
        "bank_transfer_param_id":'bankTransferParamId',
        "bank_transfer_account_owner":'bankTransferAccountOwner',
        "bank_transfer_account_number":'bankTransferAccountNumber',
        "bank_transfer_iban":'bankTransferIBAN',
        "branch_count":'branchCount',
        "zone_id":'zoneId',
        "sms_charging_stock":'smsChargingStock',
        "independent_branch":'independentBranch',
        "disable_reason":'disableReason',
        "terms_conditions":'termsConditions',
        "disable_reason_description":'disableReasonDescription',
        "unlimited_account":'unlimitedAccount',
        "payment_url":'paymentUrl',
        "callback_url":'callbackUrl',
        "callback_url_whitelabel":'callbackUrlWhitelabel',
        "insurance_centre_id":'insuranceCentreId',
        "city_region_id":'cityRegionId',
        "meta_media_activity_licence_url":'metaMediaActivityLicenceUrl',
        "license_api_key":'licenseApiKey',
        "verify_request_url":'verifyRequestUrl'
    }

    def __init__(self,
                 id=None,
                 person_id=None,
                 personality_type=None,
                 insurance_centre_type=None,
                 register_status=None,
                 center_name=None,
                 center_code=None,
                 registration_number=None,
                 free_use_golden_pack_expire_date=None,
                 city_id=None,
                 cash_payment=None,
                 show_in_easy_bimeh=None,
                 installments_payment=None,
                 is_initial_applicant=None,
                 branchs_count=None,
                 employees_count=None,
                 white_label=None,
                 phone=None,
                 fax=None,
                 address=None,
                 zip_code=None,
                 email=None,
                 web_site=None,
                 latitude=None,
                 longitude=None,
                 is_active=None,
                 province_id=None,
                 city_name=None,
                 meta_media_activity_licence_id=None,
                 create_on_persian_date=None,
                 insurance_company_id=None,
                 active_package_id=None,
                 package_activation_last_date=None,
                 online_payment=None,
                 card_to_card_payment=None,
                 bank_transfer_payment=None,
                 cash_on_delivery=None,
                 bank_transfer_same_online_payment_info=None,
                 bank_param_id=None,
                 account_owner=None,
                 account_number=None,
                 iban=None,
                 card_bank_param_id=None,
                 card_account_owner=None,
                 card_account_number=None,
                 bank_transfer_param_id=None,
                 bank_transfer_account_owner=None,
                 bank_transfer_account_number=None,
                 bank_transfer_iban=None,
                 branch_count=None,
                 zone_id=None,
                 sms_charging_stock=None,
                 independent_branch=None,
                 disable_reason=None,
                 terms_conditions=None,
                 disable_reason_description=None,
                 unlimited_account=None,
                 payment_url=None,
                 callback_url=None,
                 callback_url_whitelabel=None,
                 insurance_centre_id=None,
                 city_region_id=None,
                 meta_media_activity_licence_url=None,
                 license_api_key=None,
                 verify_request_url=None):
        """Constructor for the InsuranceCentreData class"""

        # Initialize members of the class
        self.id = id
        self.person_id = person_id
        self.personality_type = personality_type
        self.insurance_centre_type = insurance_centre_type
        self.register_status = register_status
        self.center_name = center_name
        self.center_code = center_code
        self.branch_count = branch_count
        self.registration_number = registration_number
        self.free_use_golden_pack_expire_date = free_use_golden_pack_expire_date
        self.city_id = city_id
        self.cash_payment = cash_payment
        self.show_in_easy_bimeh = show_in_easy_bimeh
        self.installments_payment = installments_payment
        self.is_initial_applicant = is_initial_applicant
        self.branchs_count = branchs_count
        self.employees_count = employees_count
        self.zone_id = zone_id
        self.sms_charging_stock = sms_charging_stock
        self.independent_branch = independent_branch
        self.disable_reason = disable_reason
        self.terms_conditions = terms_conditions
        self.disable_reason_description = disable_reason_description
        self.unlimited_account = unlimited_account
        self.white_label = white_label
        self.phone = phone
        self.fax = fax
        self.address = address
        self.zip_code = zip_code
        self.email = email
        self.payment_url = payment_url
        self.callback_url = callback_url
        self.callback_url_whitelabel = callback_url_whitelabel
        self.web_site = web_site
        self.latitude = latitude
        self.longitude = longitude
        self.is_active = is_active
        self.insurance_centre_id = insurance_centre_id
        self.city_region_id = city_region_id
        self.province_id = province_id
        self.city_name = city_name
        self.meta_media_activity_licence_id = meta_media_activity_licence_id
        self.meta_media_activity_licence_url = meta_media_activity_licence_url
        self.create_on_persian_date = create_on_persian_date
        self.insurance_company_id = insurance_company_id
        self.active_package_id = active_package_id
        self.package_activation_last_date = package_activation_last_date
        self.license_api_key = license_api_key
        self.verify_request_url = verify_request_url
        self.online_payment = online_payment
        self.card_to_card_payment = card_to_card_payment
        self.bank_transfer_payment = bank_transfer_payment
        self.cash_on_delivery = cash_on_delivery
        self.bank_transfer_same_online_payment_info = bank_transfer_same_online_payment_info
        self.bank_param_id = bank_param_id
        self.account_owner = account_owner
        self.account_number = account_number
        self.iban = iban
        self.card_bank_param_id = card_bank_param_id
        self.card_account_owner = card_account_owner
        self.card_account_number = card_account_number
        self.bank_transfer_param_id = bank_transfer_param_id
        self.bank_transfer_account_owner = bank_transfer_account_owner
        self.bank_transfer_account_number = bank_transfer_account_number
        self.bank_transfer_iban = bank_transfer_iban


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        person_id = dictionary.get('personId')
        personality_type = dictionary.get('personalityType')
        insurance_centre_type = dictionary.get('insuranceCentreType')
        register_status = dictionary.get('registerStatus')
        center_name = dictionary.get('centerName')
        center_code = dictionary.get('centerCode')
        registration_number = dictionary.get('registrationNumber')
        free_use_golden_pack_expire_date = dictionary.get('freeUseGoldenPackExpireDate')
        city_id = dictionary.get('cityId')
        cash_payment = dictionary.get('cashPayment')
        show_in_easy_bimeh = dictionary.get('showInEasyBimeh')
        installments_payment = dictionary.get('installmentsPayment')
        is_initial_applicant = dictionary.get('isInitialApplicant')
        branchs_count = dictionary.get('branchsCount')
        employees_count = dictionary.get('employeesCount')
        white_label = dictionary.get('whiteLabel')
        phone = dictionary.get('phone')
        fax = dictionary.get('fax')
        address = dictionary.get('address')
        zip_code = dictionary.get('zipCode')
        email = dictionary.get('email')
        web_site = dictionary.get('webSite')
        latitude = dictionary.get('latitude')
        longitude = dictionary.get('longitude')
        is_active = dictionary.get('isActive')
        province_id = dictionary.get('provinceId')
        city_name = dictionary.get('cityName')
        meta_media_activity_licence_id = dictionary.get('metaMediaActivityLicenceId')
        create_on_persian_date = dictionary.get('createOnPersianDate')
        insurance_company_id = dictionary.get('insuranceCompanyId')
        active_package_id = dictionary.get('activePackageId')
        package_activation_last_date = dictionary.get('packageActivationLastDate')
        online_payment = dictionary.get('onlinePayment')
        card_to_card_payment = dictionary.get('cardToCardPayment')
        bank_transfer_payment = dictionary.get('bankTransferPayment')
        cash_on_delivery = dictionary.get('cashOnDelivery')
        bank_transfer_same_online_payment_info = dictionary.get('bankTransferSameOnlinePaymentInfo')
        bank_param_id = dictionary.get('bankParamId')
        account_owner = dictionary.get('accountOwner')
        account_number = dictionary.get('accountNumber')
        iban = dictionary.get('iban')
        card_bank_param_id = dictionary.get('cardBankParamId')
        card_account_owner = dictionary.get('cardAccountOwner')
        card_account_number = dictionary.get('cardAccountNumber')
        bank_transfer_param_id = dictionary.get('bankTransferParamId')
        bank_transfer_account_owner = dictionary.get('bankTransferAccountOwner')
        bank_transfer_account_number = dictionary.get('bankTransferAccountNumber')
        bank_transfer_iban = dictionary.get('bankTransferIBAN')
        branch_count = dictionary.get('branchCount')
        zone_id = dictionary.get('zoneId')
        sms_charging_stock = dictionary.get('smsChargingStock')
        independent_branch = dictionary.get('independentBranch')
        disable_reason = dictionary.get('disableReason')
        terms_conditions = dictionary.get('termsConditions')
        disable_reason_description = dictionary.get('disableReasonDescription')
        unlimited_account = dictionary.get('unlimitedAccount')
        payment_url = dictionary.get('paymentUrl')
        callback_url = dictionary.get('callbackUrl')
        callback_url_whitelabel = dictionary.get('callbackUrlWhitelabel')
        insurance_centre_id = dictionary.get('insuranceCentreId')
        city_region_id = dictionary.get('cityRegionId')
        meta_media_activity_licence_url = dictionary.get('metaMediaActivityLicenceUrl')
        license_api_key = dictionary.get('licenseApiKey')
        verify_request_url = dictionary.get('verifyRequestUrl')

        # Return an object of this model
        return cls(id,
                   person_id,
                   personality_type,
                   insurance_centre_type,
                   register_status,
                   center_name,
                   center_code,
                   registration_number,
                   free_use_golden_pack_expire_date,
                   city_id,
                   cash_payment,
                   show_in_easy_bimeh,
                   installments_payment,
                   is_initial_applicant,
                   branchs_count,
                   employees_count,
                   white_label,
                   phone,
                   fax,
                   address,
                   zip_code,
                   email,
                   web_site,
                   latitude,
                   longitude,
                   is_active,
                   province_id,
                   city_name,
                   meta_media_activity_licence_id,
                   create_on_persian_date,
                   insurance_company_id,
                   active_package_id,
                   package_activation_last_date,
                   online_payment,
                   card_to_card_payment,
                   bank_transfer_payment,
                   cash_on_delivery,
                   bank_transfer_same_online_payment_info,
                   bank_param_id,
                   account_owner,
                   account_number,
                   iban,
                   card_bank_param_id,
                   card_account_owner,
                   card_account_number,
                   bank_transfer_param_id,
                   bank_transfer_account_owner,
                   bank_transfer_account_number,
                   bank_transfer_iban,
                   branch_count,
                   zone_id,
                   sms_charging_stock,
                   independent_branch,
                   disable_reason,
                   terms_conditions,
                   disable_reason_description,
                   unlimited_account,
                   payment_url,
                   callback_url,
                   callback_url_whitelabel,
                   insurance_centre_id,
                   city_region_id,
                   meta_media_activity_licence_url,
                   license_api_key,
                   verify_request_url)



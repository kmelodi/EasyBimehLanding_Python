# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Status(object):

    """Implementation of the 'Status' model.

    TODO: type model description here.

    Attributes:
        id (string): TODO: type description here.
        entity_id (string): TODO: type description here.
        primary_entity_name (int): TODO: type description here.
        status_collection_id (string): TODO: type description here.
        form_data (string): TODO: type description here.
        status_title (string): TODO: type description here.
        editable (bool): TODO: type description here.
        status_collection_parent_id (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "entity_id":'entityId',
        "primary_entity_name":'primaryEntityName',
        "status_collection_id":'statusCollectionId',
        "editable":'editable',
        "form_data":'formData',
        "status_title":'statusTitle',
        "status_collection_parent_id":'statusCollectionParentId'
    }

    def __init__(self,
                 id=None,
                 entity_id=None,
                 primary_entity_name=None,
                 status_collection_id=None,
                 editable=None,
                 form_data=None,
                 status_title=None,
                 status_collection_parent_id=None):
        """Constructor for the Status class"""

        # Initialize members of the class
        self.id = id
        self.entity_id = entity_id
        self.primary_entity_name = primary_entity_name
        self.status_collection_id = status_collection_id
        self.form_data = form_data
        self.status_title = status_title
        self.editable = editable
        self.status_collection_parent_id = status_collection_parent_id


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        entity_id = dictionary.get('entityId')
        primary_entity_name = dictionary.get('primaryEntityName')
        status_collection_id = dictionary.get('statusCollectionId')
        editable = dictionary.get('editable')
        form_data = dictionary.get('formData')
        status_title = dictionary.get('statusTitle')
        status_collection_parent_id = dictionary.get('statusCollectionParentId')

        # Return an object of this model
        return cls(id,
                   entity_id,
                   primary_entity_name,
                   status_collection_id,
                   editable,
                   form_data,
                   status_title,
                   status_collection_parent_id)



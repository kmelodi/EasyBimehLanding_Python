# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import easybimehlanding.models.tracking_damage_status_tracking_code

class TrackingCode(object):

    """Implementation of the 'TrackingCode' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        insurance_type_id (int): TODO: type description here.
        insurance_centre_id (int): TODO: type description here.
        insurance_centre_name (string): TODO: type description here.
        insurance_company_id (int): TODO: type description here.
        insurance_company_title (string): TODO: type description here.
        insurance_policy_number (string): TODO: type description here.
        personality_type (int): TODO: type description here.
        damage_type (string): TODO: type description here.
        name (string): TODO: type description here.
        national_code (string): TODO: type description here.
        mobile (string): TODO: type description here.
        insured_profile (string): TODO: type description here.
        refrenced_user (string): TODO: type description here.
        reference_count (string): TODO: type description here.
        tracking_code (string): TODO: type description here.
        payment_type (string): TODO: type description here.
        payment_date (string): TODO: type description here.
        payment_persian_date (string): TODO: type description here.
        sub_domain (string): TODO: type description here.
        insurance_type_title (string): TODO: type description here.
        create_on (string): TODO: type description here.
        update_on (string): TODO: type description here.
        create_on_persian_date (string): TODO: type description here.
        update_on_persian_date (string): TODO: type description here.
        tracking_damage_status (list of TrackingDamageStatusTrackingCode):
            TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "insurance_type_id":'insuranceTypeId',
        "insurance_centre_id":'insuranceCentreId',
        "insurance_centre_name":'insuranceCentreName',
        "insurance_company_id":'insuranceCompanyId',
        "insurance_company_title":'insuranceCompanyTitle',
        "insurance_policy_number":'insurancePolicyNumber',
        "personality_type":'personalityType',
        "damage_type":'damageType',
        "name":'name',
        "national_code":'nationalCode',
        "mobile":'mobile',
        "insured_profile":'insuredProfile',
        "tracking_code":'trackingCode',
        "payment_persian_date":'paymentPersianDate',
        "sub_domain":'subDomain',
        "create_on":'createOn',
        "create_on_persian_date":'createOnPersianDate',
        "update_on_persian_date":'updateOnPersianDate',
        "tracking_damage_status":'trackingDamageStatus',
        "refrenced_user":'refrencedUser',
        "reference_count":'referenceCount',
        "payment_type":'paymentType',
        "payment_date":'paymentDate',
        "insurance_type_title":'insuranceTypeTitle',
        "update_on":'updateOn'
    }

    def __init__(self,
                 id=None,
                 insurance_type_id=None,
                 insurance_centre_id=None,
                 insurance_centre_name=None,
                 insurance_company_id=None,
                 insurance_company_title=None,
                 insurance_policy_number=None,
                 personality_type=None,
                 damage_type=None,
                 name=None,
                 national_code=None,
                 mobile=None,
                 insured_profile=None,
                 tracking_code=None,
                 payment_persian_date=None,
                 sub_domain=None,
                 create_on=None,
                 create_on_persian_date=None,
                 update_on_persian_date=None,
                 tracking_damage_status=None,
                 refrenced_user=None,
                 reference_count=None,
                 payment_type=None,
                 payment_date=None,
                 insurance_type_title=None,
                 update_on=None):
        """Constructor for the TrackingCode class"""

        # Initialize members of the class
        self.id = id
        self.insurance_type_id = insurance_type_id
        self.insurance_centre_id = insurance_centre_id
        self.insurance_centre_name = insurance_centre_name
        self.insurance_company_id = insurance_company_id
        self.insurance_company_title = insurance_company_title
        self.insurance_policy_number = insurance_policy_number
        self.personality_type = personality_type
        self.damage_type = damage_type
        self.name = name
        self.national_code = national_code
        self.mobile = mobile
        self.insured_profile = insured_profile
        self.refrenced_user = refrenced_user
        self.reference_count = reference_count
        self.tracking_code = tracking_code
        self.payment_type = payment_type
        self.payment_date = payment_date
        self.payment_persian_date = payment_persian_date
        self.sub_domain = sub_domain
        self.insurance_type_title = insurance_type_title
        self.create_on = create_on
        self.update_on = update_on
        self.create_on_persian_date = create_on_persian_date
        self.update_on_persian_date = update_on_persian_date
        self.tracking_damage_status = tracking_damage_status


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        insurance_type_id = dictionary.get('insuranceTypeId')
        insurance_centre_id = dictionary.get('insuranceCentreId')
        insurance_centre_name = dictionary.get('insuranceCentreName')
        insurance_company_id = dictionary.get('insuranceCompanyId')
        insurance_company_title = dictionary.get('insuranceCompanyTitle')
        insurance_policy_number = dictionary.get('insurancePolicyNumber')
        personality_type = dictionary.get('personalityType')
        damage_type = dictionary.get('damageType')
        name = dictionary.get('name')
        national_code = dictionary.get('nationalCode')
        mobile = dictionary.get('mobile')
        insured_profile = dictionary.get('insuredProfile')
        tracking_code = dictionary.get('trackingCode')
        payment_persian_date = dictionary.get('paymentPersianDate')
        sub_domain = dictionary.get('subDomain')
        create_on = dictionary.get('createOn')
        create_on_persian_date = dictionary.get('createOnPersianDate')
        update_on_persian_date = dictionary.get('updateOnPersianDate')
        tracking_damage_status = None
        if dictionary.get('trackingDamageStatus') != None:
            tracking_damage_status = list()
            for structure in dictionary.get('trackingDamageStatus'):
                tracking_damage_status.append(easybimehlanding.models.tracking_damage_status_tracking_code.TrackingDamageStatusTrackingCode.from_dictionary(structure))
        refrenced_user = dictionary.get('refrencedUser')
        reference_count = dictionary.get('referenceCount')
        payment_type = dictionary.get('paymentType')
        payment_date = dictionary.get('paymentDate')
        insurance_type_title = dictionary.get('insuranceTypeTitle')
        update_on = dictionary.get('updateOn')

        # Return an object of this model
        return cls(id,
                   insurance_type_id,
                   insurance_centre_id,
                   insurance_centre_name,
                   insurance_company_id,
                   insurance_company_title,
                   insurance_policy_number,
                   personality_type,
                   damage_type,
                   name,
                   national_code,
                   mobile,
                   insured_profile,
                   tracking_code,
                   payment_persian_date,
                   sub_domain,
                   create_on,
                   create_on_persian_date,
                   update_on_persian_date,
                   tracking_damage_status,
                   refrenced_user,
                   reference_count,
                   payment_type,
                   payment_date,
                   insurance_type_title,
                   update_on)



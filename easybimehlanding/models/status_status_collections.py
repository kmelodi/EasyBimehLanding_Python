# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class StatusStatusCollections(object):

    """Implementation of the 'Status/StatusCollections' model.

    TODO: type model description here.

    Attributes:
        id (string): TODO: type description here.
        parent_id (string): TODO: type description here.
        status_type (int): TODO: type description here.
        title (string): TODO: type description here.
        icon_name (string): TODO: type description here.
        description (string): TODO: type description here.
        editable (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "status_type":'statusType',
        "title":'title',
        "editable":'editable',
        "parent_id":'parentId',
        "icon_name":'iconName',
        "description":'description'
    }

    def __init__(self,
                 id=None,
                 status_type=None,
                 title=None,
                 editable=None,
                 parent_id=None,
                 icon_name=None,
                 description=None):
        """Constructor for the StatusStatusCollections class"""

        # Initialize members of the class
        self.id = id
        self.parent_id = parent_id
        self.status_type = status_type
        self.title = title
        self.icon_name = icon_name
        self.description = description
        self.editable = editable


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        status_type = dictionary.get('statusType')
        title = dictionary.get('title')
        editable = dictionary.get('editable')
        parent_id = dictionary.get('parentId')
        icon_name = dictionary.get('iconName')
        description = dictionary.get('description')

        # Return an object of this model
        return cls(id,
                   status_type,
                   title,
                   editable,
                   parent_id,
                   icon_name,
                   description)



# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class InsurancePolicyCondition(object):

    """Implementation of the 'InsurancePolicyCondition' model.

    شرایط بیمه نامه

    Attributes:
        id (int): TODO: type description here.
        insurance_centre_id (int): شناسه ی مرکز بیمه
        insurance_company_policy_type_id (int): شناسه ی نوع بیمه نامه ی شرکت
            بیمه
        display_priority (string): الویت نمایش
        issue_insurance (string): امکان صدور بیمه نامه
        damage_assessment (string): ارزیابی خسارت
        cash_payment (string): پرداخت نقدی
        installments_payment (string): پرداخت اقساطی
        prepayment_percent (string): درصدر پیش پرداخت
        count_installment_from (string): تعداد اقساط از
        count_installment_to (string): تعداد اقساط تا
        payment_methods (string): روش فروش
        promotion (string): پروموشن
        is_active (bool): وضعیت فعال

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "insurance_centre_id":'insuranceCentreId',
        "insurance_company_policy_type_id":'insuranceCompanyPolicyTypeId',
        "is_active":'isActive',
        "display_priority":'displayPriority',
        "issue_insurance":'issueInsurance',
        "damage_assessment":'damageAssessment',
        "cash_payment":'cashPayment',
        "installments_payment":'installmentsPayment',
        "prepayment_percent":'prepaymentPercent',
        "count_installment_from":'countInstallmentFrom',
        "count_installment_to":'countInstallmentTo',
        "payment_methods":'paymentMethods',
        "promotion":'promotion'
    }

    def __init__(self,
                 id=None,
                 insurance_centre_id=None,
                 insurance_company_policy_type_id=None,
                 is_active=None,
                 display_priority=None,
                 issue_insurance=None,
                 damage_assessment=None,
                 cash_payment=None,
                 installments_payment=None,
                 prepayment_percent=None,
                 count_installment_from=None,
                 count_installment_to=None,
                 payment_methods=None,
                 promotion=None):
        """Constructor for the InsurancePolicyCondition class"""

        # Initialize members of the class
        self.id = id
        self.insurance_centre_id = insurance_centre_id
        self.insurance_company_policy_type_id = insurance_company_policy_type_id
        self.display_priority = display_priority
        self.issue_insurance = issue_insurance
        self.damage_assessment = damage_assessment
        self.cash_payment = cash_payment
        self.installments_payment = installments_payment
        self.prepayment_percent = prepayment_percent
        self.count_installment_from = count_installment_from
        self.count_installment_to = count_installment_to
        self.payment_methods = payment_methods
        self.promotion = promotion
        self.is_active = is_active


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        insurance_centre_id = dictionary.get('insuranceCentreId')
        insurance_company_policy_type_id = dictionary.get('insuranceCompanyPolicyTypeId')
        is_active = dictionary.get('isActive')
        display_priority = dictionary.get('displayPriority')
        issue_insurance = dictionary.get('issueInsurance')
        damage_assessment = dictionary.get('damageAssessment')
        cash_payment = dictionary.get('cashPayment')
        installments_payment = dictionary.get('installmentsPayment')
        prepayment_percent = dictionary.get('prepaymentPercent')
        count_installment_from = dictionary.get('countInstallmentFrom')
        count_installment_to = dictionary.get('countInstallmentTo')
        payment_methods = dictionary.get('paymentMethods')
        promotion = dictionary.get('promotion')

        # Return an object of this model
        return cls(id,
                   insurance_centre_id,
                   insurance_company_policy_type_id,
                   is_active,
                   display_priority,
                   issue_insurance,
                   damage_assessment,
                   cash_payment,
                   installments_payment,
                   prepayment_percent,
                   count_installment_from,
                   count_installment_to,
                   payment_methods,
                   promotion)



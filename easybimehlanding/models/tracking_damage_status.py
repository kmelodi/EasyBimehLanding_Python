# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import easybimehlanding.models.tracking_damage_file

class TrackingDamageStatus(object):

    """Implementation of the 'TrackingDamageStatus' model.

    TODO: type model description here.

    Attributes:
        tracking_damage_file (list of TrackingDamageFile): TODO: type
            description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "tracking_damage_file":'trackingDamageFile'
    }

    def __init__(self,
                 tracking_damage_file=None):
        """Constructor for the TrackingDamageStatus class"""

        # Initialize members of the class
        self.tracking_damage_file = tracking_damage_file


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        tracking_damage_file = None
        if dictionary.get('trackingDamageFile') != None:
            tracking_damage_file = list()
            for structure in dictionary.get('trackingDamageFile'):
                tracking_damage_file.append(easybimehlanding.models.tracking_damage_file.TrackingDamageFile.from_dictionary(structure))

        # Return an object of this model
        return cls(tracking_damage_file)



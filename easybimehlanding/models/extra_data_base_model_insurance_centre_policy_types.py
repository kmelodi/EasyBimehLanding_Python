# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class ExtraDataBaseModelInsuranceCentrePolicyTypes(object):

    """Implementation of the 'ExtraData Base Model InsuranceCentrePolicyTypes' model.

    TODO: type model description here.

    Attributes:
        insurance_types_count (int): TODO: type description here.
        has_plan (bool): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "insurance_types_count":'insuranceTypesCount',
        "has_plan":'hasPlan'
    }

    def __init__(self,
                 insurance_types_count=None,
                 has_plan=None):
        """Constructor for the ExtraDataBaseModelInsuranceCentrePolicyTypes class"""

        # Initialize members of the class
        self.insurance_types_count = insurance_types_count
        self.has_plan = has_plan


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        insurance_types_count = dictionary.get('insuranceTypesCount')
        has_plan = dictionary.get('hasPlan')

        # Return an object of this model
        return cls(insurance_types_count,
                   has_plan)



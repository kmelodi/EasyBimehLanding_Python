# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class Upload(object):

    """Implementation of the 'Upload' model.

    اطلاعات فایل آپلود شده

    Attributes:
        id (int): شناسه ی فایل
        meta_media_directory_id (int): شناسه ی دایرکتوری فایل
        title (string): عنوان
        alt (string): توضیح فایل
        file_name (string): نام فایل
        password_hash (string): پسورد فایل
        is_active (string): وضعیت اکتیو بودن فایل
        expire_on (string): زمان انقضای فایل
        file_library_label_param (string): لیبل دسته بندی فایل
        file_size (string): اندازه ی فایل
        file_size_value (string): اندازه ی فایل
        file_url (string): آدرس فایل
        file_thumbnail_url (string): آدرس پیش نمایش فایل
        expire_on_persian_date (string): تاریخ انقضای شمسی
        update_on (string): تاریخ بروز رسانی فایل
        create_on (string): تاریخ ثبت فایل
        create_on_persian_date (string): تاریخ ثبت فایل شمسی
        update_on_persian_date (string): تاریخ بروز رسانی فایل شمسی
        file_path (string): آدرس دایرکتوری فایل

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "meta_media_directory_id":'metaMediaDirectoryId',
        "file_name":'fileName',
        "file_size_value":'fileSizeValue',
        "file_url":'fileUrl',
        "file_thumbnail_url":'fileThumbnailUrl',
        "expire_on_persian_date":'expireOnPersianDate',
        "update_on":'updateOn',
        "create_on":'createOn',
        "create_on_persian_date":'createOnPersianDate',
        "update_on_persian_date":'updateOnPersianDate',
        "file_path":'filePath',
        "title":'title',
        "alt":'alt',
        "password_hash":'passwordHash',
        "is_active":'isActive',
        "expire_on":'expireOn',
        "file_library_label_param":'fileLibraryLabelParam',
        "file_size":'fileSize'
    }

    def __init__(self,
                 id=None,
                 meta_media_directory_id=None,
                 file_name=None,
                 file_size_value=None,
                 file_url=None,
                 file_thumbnail_url=None,
                 expire_on_persian_date=None,
                 update_on=None,
                 create_on=None,
                 create_on_persian_date=None,
                 update_on_persian_date=None,
                 file_path=None,
                 title=None,
                 alt=None,
                 password_hash=None,
                 is_active=None,
                 expire_on=None,
                 file_library_label_param=None,
                 file_size=None):
        """Constructor for the Upload class"""

        # Initialize members of the class
        self.id = id
        self.meta_media_directory_id = meta_media_directory_id
        self.title = title
        self.alt = alt
        self.file_name = file_name
        self.password_hash = password_hash
        self.is_active = is_active
        self.expire_on = expire_on
        self.file_library_label_param = file_library_label_param
        self.file_size = file_size
        self.file_size_value = file_size_value
        self.file_url = file_url
        self.file_thumbnail_url = file_thumbnail_url
        self.expire_on_persian_date = expire_on_persian_date
        self.update_on = update_on
        self.create_on = create_on
        self.create_on_persian_date = create_on_persian_date
        self.update_on_persian_date = update_on_persian_date
        self.file_path = file_path


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        meta_media_directory_id = dictionary.get('metaMediaDirectoryId')
        file_name = dictionary.get('fileName')
        file_size_value = dictionary.get('fileSizeValue')
        file_url = dictionary.get('fileUrl')
        file_thumbnail_url = dictionary.get('fileThumbnailUrl')
        expire_on_persian_date = dictionary.get('expireOnPersianDate')
        update_on = dictionary.get('updateOn')
        create_on = dictionary.get('createOn')
        create_on_persian_date = dictionary.get('createOnPersianDate')
        update_on_persian_date = dictionary.get('updateOnPersianDate')
        file_path = dictionary.get('filePath')
        title = dictionary.get('title')
        alt = dictionary.get('alt')
        password_hash = dictionary.get('passwordHash')
        is_active = dictionary.get('isActive')
        expire_on = dictionary.get('expireOn')
        file_library_label_param = dictionary.get('fileLibraryLabelParam')
        file_size = dictionary.get('fileSize')

        # Return an object of this model
        return cls(id,
                   meta_media_directory_id,
                   file_name,
                   file_size_value,
                   file_url,
                   file_thumbnail_url,
                   expire_on_persian_date,
                   update_on,
                   create_on,
                   create_on_persian_date,
                   update_on_persian_date,
                   file_path,
                   title,
                   alt,
                   password_hash,
                   is_active,
                   expire_on,
                   file_library_label_param,
                   file_size)



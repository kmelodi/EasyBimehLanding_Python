# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""


class SummaryNotic(object):

    """Implementation of the 'SummaryNotic' model.

    TODO: type model description here.

    Attributes:
        id (int): TODO: type description here.
        insurance_centre_id (int): TODO: type description here.
        article_type (int): TODO: type description here.
        title (string): TODO: type description here.
        summary (string): TODO: type description here.
        article_group (string): TODO: type description here.
        meta_media_file_id (int): TODO: type description here.
        meta_media_file_url (string): TODO: type description here.
        publish_persian_date (string): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id":'id',
        "insurance_centre_id":'insuranceCentreId',
        "article_type":'articleType',
        "title":'title',
        "summary":'summary',
        "article_group":'articleGroup',
        "meta_media_file_id":'metaMediaFileId',
        "meta_media_file_url":'metaMediaFileUrl',
        "publish_persian_date":'publishPersianDate'
    }

    def __init__(self,
                 id=None,
                 insurance_centre_id=None,
                 article_type=None,
                 title=None,
                 summary=None,
                 article_group=None,
                 meta_media_file_id=None,
                 meta_media_file_url=None,
                 publish_persian_date=None):
        """Constructor for the SummaryNotic class"""

        # Initialize members of the class
        self.id = id
        self.insurance_centre_id = insurance_centre_id
        self.article_type = article_type
        self.title = title
        self.summary = summary
        self.article_group = article_group
        self.meta_media_file_id = meta_media_file_id
        self.meta_media_file_url = meta_media_file_url
        self.publish_persian_date = publish_persian_date


    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object as
            obtained from the deserialization of the server's response. The keys
            MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get('id')
        insurance_centre_id = dictionary.get('insuranceCentreId')
        article_type = dictionary.get('articleType')
        title = dictionary.get('title')
        summary = dictionary.get('summary')
        article_group = dictionary.get('articleGroup')
        meta_media_file_id = dictionary.get('metaMediaFileId')
        meta_media_file_url = dictionary.get('metaMediaFileUrl')
        publish_persian_date = dictionary.get('publishPersianDate')

        # Return an object of this model
        return cls(id,
                   insurance_centre_id,
                   article_type,
                   title,
                   summary,
                   article_group,
                   meta_media_file_id,
                   meta_media_file_url,
                   publish_persian_date)



# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

from easybimehlanding.api_helper import APIHelper
from easybimehlanding.configuration import Configuration
from easybimehlanding.controllers.base_controller import BaseController
from easybimehlanding.models.base_model_damage_type import BaseModelDamageType
from easybimehlanding.models.insurance_types import InsuranceTypes
from easybimehlanding.models.insurance_companies import InsuranceCompanies

class ComboDataController(BaseController):

    """A Controller to access Endpoints in the easybimehlanding API."""


    def get_damage_type(self,
                        x_api_key):
        """Does a GET request to /DamageType.

        دریافت لیست نوع خسارت

        Args:
            x_api_key (string): کلید اختصاصی ارتباط با سرور

        Returns:
            BaseModelDamageType: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/DamageType'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json',
            'x-api-key': x_api_key
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, BaseModelDamageType.from_dictionary)

    def get_insurance_types(self,
                            sub_domain,
                            issue_insurance,
                            x_api_key):
        """Does a GET request to /ComboData/InsuranceTypes.

        دریافت لیست نوع بیمه نامه

        Args:
            sub_domain (string): دامنه یا زیر دامنه ی مرکز بیمه
            issue_insurance (bool): دریافت بیمه نامه های قابل صدور
            x_api_key (string): کلید اختصاصی ارتباط با سرور

        Returns:
            InsuranceTypes: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/ComboData/InsuranceTypes'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_parameters = {
            'subDomain': sub_domain,
            'issueInsurance': issue_insurance
        }
        _query_builder = APIHelper.append_url_with_query_parameters(_query_builder,
            _query_parameters, Configuration.array_serialization)
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json',
            'x-api-key': x_api_key
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, InsuranceTypes.from_dictionary)

    def get_insurance_companies(self,
                                sub_domain,
                                insurance_type_id,
                                x_api_key):
        """Does a GET request to /ComboData/InsuranceCompanies.

        دریافت لیست شرکت های بیمه

        Args:
            sub_domain (string): دامنه یا زیر دامنه ی مرکز بیمه
            insurance_type_id (int): شناسه ی نوع بیمه نامه
            x_api_key (string): کلید اختصاصی ارتباط با سرور

        Returns:
            InsuranceCompanies: Response from the API. 

        Raises:
            APIException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        # Prepare query URL
        _url_path = '/ComboData/InsuranceCompanies'
        _query_builder = Configuration.get_base_uri()
        _query_builder += _url_path
        _query_parameters = {
            'subDomain': sub_domain,
            'insuranceTypeId': insurance_type_id
        }
        _query_builder = APIHelper.append_url_with_query_parameters(_query_builder,
            _query_parameters, Configuration.array_serialization)
        _query_url = APIHelper.clean_url(_query_builder)

        # Prepare headers
        _headers = {
            'accept': 'application/json',
            'x-api-key': x_api_key
        }

        # Prepare and execute request
        _request = self.http_client.get(_query_url, headers=_headers)
        _context = self.execute_request(_request)
        self.validate_response(_context)

        # Return appropriate type
        return APIHelper.json_deserialize(_context.response.raw_body, InsuranceCompanies.from_dictionary)

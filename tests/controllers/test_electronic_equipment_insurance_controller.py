# -*- coding: utf-8 -*-

"""
    easybimehlanding

    This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
"""

import jsonpickle
import dateutil.parser
from .controller_test_base import ControllerTestBase
from ..test_helper import TestHelper
from easybimehlanding.api_helper import APIHelper


class ElectronicEquipmentInsuranceControllerTests(ControllerTestBase):

    @classmethod
    def setUpClass(cls):
        super(ElectronicEquipmentInsuranceControllerTests, cls).setUpClass()
        cls.controller = cls.api_client.electronic_equipment_insurance

    # TODO: Add Description
    def test_divice_franchisee(self):
        # Parameters for the API call
        device_model_id = 1340
        x_api_key = 'd6dfd932-75d8-e911-811a-000c294ecf01'

        # Perform the API call through the SDK function
        result = self.controller.get_divice_franchisee(device_model_id, x_api_key)

        # Test response code
        self.assertEquals(self.response_catcher.response.status_code, 200)

        # Test headers
        expected_headers = {}
        expected_headers['date'] = None
        expected_headers['content-type'] = None
        expected_headers['transfer-encoding'] = None
        expected_headers['connection'] = None
        expected_headers['keep-alive'] = None
        expected_headers['vary'] = None
        expected_headers['cache-control'] = None
        expected_headers['pragma'] = None
        expected_headers['expires'] = None
        expected_headers['x-stackifyid'] = None
        expected_headers['x-aspnet-version'] = None
        expected_headers['x-powered-by'] = None
        expected_headers['server'] = None
        expected_headers['ar-poweredby'] = None
        expected_headers['ar-sid'] = None
        expected_headers['ar-atime'] = None
        expected_headers['ar-cache'] = None
        expected_headers['ar-request-id'] = None
        expected_headers['content-encoding'] = None

        self.assertTrue(TestHelper.match_headers(expected_headers, self.response_catcher.response.headers))

        
        # Test whether the captured response is as we expected
        self.assertIsNotNone(result)
        expected_body = APIHelper.json_deserialize(
            '{"isSuccess":true,"status":200,"message":[{"id":5404,"title":"30%","extraD'
            'ata":null},{"id":5401,"title":"40%","extraData":null}],"extraData":null,"ex'
            'ception":null}'
            )
        received_body = APIHelper.json_deserialize(self.response_catcher.response.raw_body)
        self.assertTrue(TestHelper.match_body(expected_body, received_body))


